//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Infrastructure.Repositories.Abstract.CRUD.Delete
{
    using System;

    /// <summary>
    /// A strongly-typed resource class, for looking up localized strings, etc.
    /// This class provides access to resources for deletion operations, allowing
    /// for easy retrieval and localization of resource strings specific to the
    /// delete functionality within the repository infrastructure.
    /// </summary>
     // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ResourceDeleteRepository
    {
        // Cached ResourceManager instance used for managing resource access.
        private static global::System.Resources.ResourceManager resourceMan;
        // Stores the culture information to be used in resource lookups.
        private static global::System.Globalization.CultureInfo resourceCulture;
        // Suppresses CA1811: AvoidUncalledPrivateCode as this constructor might not be called directly.
        // The constructor is marked internal, limiting object creation to within this assembly.
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ResourceDeleteRepository()
        {
        }

        /// <summary>
        /// Returns the cached ResourceManager instance used by the class.
        /// This manager is responsible for retrieving the resource values efficiently.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                // Initializes the ResourceManager if it hasn't been created yet.
                if (object.ReferenceEquals(resourceMan, null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Infrastructure.Repositories.Abstract.CRUD.Delete.ResourceDeleteRepository", typeof(ResourceDeleteRepository).Assembly);
                    resourceMan = temp;
                }

                return resourceMan;
            }
        }

        /// <summary>
        /// Overrides the current thread's CurrentUICulture property for all
        /// resource lookups using this strongly typed resource class.
        /// Allows for retrieving the resources within the specific culture settings.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                // Returns the current culture set for resource lookups.
                return resourceCulture;
            }

            set
            {
                // Sets the culture for resource lookups, allowing for localization.
                resourceCulture = value;
            }
        }

        /// <summary>
        /// Looks up a localized string similar to "{0} was deleted successfully."
        /// This message format can be used to confirm successful deletion operations,
        /// where {0} is replaced by the specific entity name during runtime.
        /// </summary>
        internal static string SuccessfullyGenericDeleted
        {
            get
            {
                // Retrieves the resource string from the resource file based on the current culture.
                return ResourceManager.GetString("SuccessfullyGenericDeleted", resourceCulture);
            }
        }
    }
}