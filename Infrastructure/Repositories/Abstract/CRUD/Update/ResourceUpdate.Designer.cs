//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Infrastructure.Repositories.Abstract.CRUD.Update
{
    using System;

    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    ///   This class provides localized string resources for update operations.
    /// </summary>
    /// <remarks>
    ///   This class was auto-generated by the StronglyTypedResourceBuilder
    ///   class via a tool like ResGen or Visual Studio.
    ///   To add or remove a member, edit your .ResX file then rerun ResGen
    ///   with the /str option, or rebuild your VS project.
    /// </remarks>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ResourceUpdate
    {
        // The ResourceManager that manages the access to resource strings for this class.
        private static global::System.Resources.ResourceManager resourceMan;
        // The CultureInfo that can be used to determine the culture-specific resources to use.
        private static global::System.Globalization.CultureInfo resourceCulture;
        /// <summary>
        ///   Initializes a new instance of the ResourceUpdate class.
        ///   Constructor defined to prevent the instantiation of this class as it serves 
        ///   primarily as a container for static resource access.
        /// </summary>
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ResourceUpdate()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        ///   If no instance exists, a new one is created and returned.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if (object.ReferenceEquals(resourceMan, null))
                {
                    // Initiate a new ResourceManager to handle resources for this class
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Infrastructure.Repositories.Abstract.CRUD.Update.ResourceUpdate", typeof(ResourceUpdate).Assembly);
                    resourceMan = temp;
                }

                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the CurrentUICulture property for all resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }

            set
            {
                resourceCulture = value;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to {0} was updated successfully.
        ///   Used to indicate that a generic update operation was successful.
        /// </summary>
        internal static string SuccessfullyGenericUpdated
        {
            get
            {
                // Retrieve the localized string for successful update message
                return ResourceManager.GetString("SuccessfullyGenericUpdated", resourceCulture);
            }
        }
    }
}